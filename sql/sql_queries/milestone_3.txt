*** MILESTONE 3 ***
Project: Price Tracker
Group Members:
	Kenneth Shinn
	Varun Ramakrishnan
	Arun Kirubarajan

Database Credentials -
Hostname: cis550pricetracker.cgcukgcycu5f.us-east-1.rds.amazonaws.com
Port: 1521
SID: CIS550DB
Username: admin
Password: password

Queries -

1. Simple queries to get basic price information:
Contributor: Kenneth

SELECT AAPL 
FROM Stocks s 
WHERE s.dateID = 20200324;

Also can include queries to get history:

Select history as news_today
From History h
Where h.dateid = 20080808;


2. Get the price adjusted for inflation (i.e. how much would AAPL cost in 1980?):
Contributor: Kenneth

SELECT (AAPL / adjustment_rate.AMOUNT) as adjusted_AAPL
FROM Stocks s, (
SELECT Amount 
FROM Inflation i
WHERE i.Year = 1980) adjustment_rate
WHERE s.dateID = 20200324;


3. Compare specific stocks against indexes (i.e. is Apple stock gaining value faster than NASDAQ?):
Contributor: Kenneth

SELECT s.AAPL as apple_stock, i.nasdaq as nasdaq
FROM Indexes i JOIN Stocks s
ON i.dateID = s.dateID
WHERE i.dateID >= 20200311;


4. Given a series of days, see how each day's current events affect the stock prices (i.e. in this example you can see that negative world events of the last month caused the stocks to plummet):
Contributor: Kenneth

SELECT s.AAPL as Apple, s.AMZN as Amazon, s.JCP as JCPenney, s.GE as GE, s.BB as BlackBerry, h.history
FROM Stocks s JOIN History h
ON s.dateID = h.dateID
WHERE s.dateID >= 20200211
AND s.dateID <= 20200320;


5. What's the average price of a stock adjusted for inflation (here we limit to the dates to when apple was a company):
Contributor: Kenneth

SELECT AVG(adjusted_apple)
FROM (SELECT (AAPL/AMOUNT) as adjusted_apple
FROM (SELECT dateID, AAPL
FROM Stocks s
WHERE dateID >= 19801212) a 
JOIN Dates d ON a.dateID = d.dateID
JOIN Inflation i ON d.Year = i.Year);


6. In the last x days, have prices in my bundle of stocks been trending down or up? (here x=10):
Contributor: Kenneth

SELECT (t.today_weighted_price - x.x_days_ago_weighted_price) price_delta
FROM
(SELECT (s.AAPL + s.AMZN)/2 as today_weighted_price
FROM Stocks s 
WHERE s.dateID = 20200323) t,
(SELECT (s.AAPL + s.AMZN)/2 as x_days_ago_weighted_price
FROM Stocks s 
WHERE s.dateID = 20200313) x ;

7. How volatile is the price of Super Mario 64 over the last x months? (here x=8):
Contributor: Varun

SELECT (t.today_mario - p.past_mario) price_delta
FROM
(SELECT c.MARIO as today_mario
FROM Commodities c 
WHERE c.dateID = 20200102) t,
(SELECT c.MARIO as past_mario
FROM Commodities c
WHERE c.dateID = 20190502) p ;

8. Return the higher inflation-adjusted value of the Valentino Beanie Baby or Sears? (in 2006):
Contributor: Varun
WITH Sears AS (SELECT (SHLDQ/AMOUNT) as adjusted_sears
FROM (SELECT dateID, SHLDQ
FROM Stocks s
WHERE dateID = 20060323) a 
JOIN Dates d ON a.dateID = d.dateID
JOIN Inflation i ON d.Year = i.Year),
Valentino AS (SELECT (Valentino/AMOUNT) as adjusted_valentino
FROM (SELECT dateID, Valentino
FROM Commodities c
WHERE dateID = 20060323) a 
JOIN Dates d ON a.dateID = d.dateID
JOIN Inflation i ON d.Year = i.Year)
SELECT GREATEST(v.adjusted_valentino, s.adjusted_sears) as higher_value
FROM Sears s, Valentino v;

9. If I invested $50,000 in _____ in 2000, how much would it be worth now? (ex: AAPL)
WITH purchased AS (
SELECT 50000/s.AAPL as num_shares
FROM STOCKS s
WHERE s.dateID = 20000103),
curr AS (
SELECT AAPL
FROM STOCKS
WHERE dateID = 20200324)
SELECT purchased.num_shares * curr.AAPL
FROM purchased, curr;

10. Compare the pre-2008 recession price to the post-2008 recession price (percentage)
WITH before_rec AS (
SELECT s.FMCC AS before_price
FROM STOCKS s
WHERE s.dateID = 20070907),
after_rec AS (
SELECT s.FMCC AS after_price
FROM STOCKS s
WHERE dateID = 20090305)
SELECT after_rec.after_price/before_rec.before_price
FROM before_rec, after_rec;

Overall Contributions - 
Varun (47.5%): Obtained all raw data, which included downloading historical data from Yahoo Finance and scraping data for commodities. Also wrote Python scripts to clean all the data and manually cleaned data using Microsoft Excel. Prepared all data for ingestion into AWS DB. 
Kenneth (47.5%): Assisted with some last-minute data cleaning for ingestion. Handled all of the ingestion process, which included writing DLL statements and configuring DB. Wrote 6/8 SQL queries and collaborated with Varun to adjust some data when ingestion had problems (i.e. changing Date column to dateID). 
Arun (5%): Helped to revamp overall idea and pushed us to include the commodities data. Will handle most of web development rather than working on data and SQL work, thus making all contributions for the overall project equal. 

Our Github is fully updated with raw data, cleaned data, cleaning scripts, SQL DLL, and SQL queries. 
